# Generated by Django 5.0.9 on 2024-11-25 07:03

import django.db.models.deletion
import wagtail.fields
import wagtail.search.index
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("wagtailcore", "0094_alter_page_locale"),
    ]

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("job_title", models.CharField(blank=True, max_length=255)),
                ("url", models.URLField(blank=True)),
            ],
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name="BlogIndexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "social_text",
                    models.CharField(
                        blank=True,
                        help_text="Description of this page as it should appear when shared on social networks, or in Google results",
                        max_length=255,
                        verbose_name="Meta description",
                    ),
                ),
                (
                    "listing_intro",
                    models.TextField(
                        blank=True,
                        help_text="Summary of this page to display when this is linked from elsewhere in the site.",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page", models.Model),
        ),
        migrations.CreateModel(
            name="BlogPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "social_text",
                    models.CharField(
                        blank=True,
                        help_text="Description of this page as it should appear when shared on social networks, or in Google results",
                        max_length=255,
                        verbose_name="Meta description",
                    ),
                ),
                (
                    "listing_intro",
                    models.TextField(
                        blank=True,
                        help_text="Summary of this page to display when this is linked from elsewhere in the site.",
                    ),
                ),
                ("canonical_url", models.URLField(blank=True)),
                ("date", models.DateField()),
                ("introduction", models.CharField(max_length=511)),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [
                            ("h2", 0),
                            ("h3", 1),
                            ("h4", 2),
                            ("paragraph", 3),
                            ("blockquote", 4),
                            ("image", 5),
                            ("document", 6),
                            ("embed", 7),
                            ("markdown", 8),
                            ("codeblock", 11),
                            ("teaser", 17),
                            ("get_started_block", 18),
                            ("sign_up_form", 19),
                            ("highlight", 29),
                            ("standalone_cta", 31),
                        ],
                        block_lookup={
                            0: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {
                                    "form_classname": "title",
                                    "icon": "title",
                                    "template": "patterns/components/streamfields/headings/heading-2.html",
                                },
                            ),
                            1: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {
                                    "form_classname": "title",
                                    "icon": "title",
                                    "template": "patterns/components/streamfields/headings/heading-3.html",
                                },
                            ),
                            2: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {
                                    "form_classname": "title",
                                    "icon": "title",
                                    "template": "patterns/components/streamfields/headings/heading-4.html",
                                },
                            ),
                            3: (
                                "wagtail.blocks.RichTextBlock",
                                (),
                                {
                                    "icon": "pilcrow",
                                    "template": "patterns/components/streamfields/rich_text_block/rich_text_block.html",
                                },
                            ),
                            4: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {
                                    "form_classname": "title",
                                    "icon": "openquote",
                                    "template": "patterns/components/streamfields/quotes/standalone_quote_block.html",
                                },
                            ),
                            5: (
                                "wagtail.images.blocks.ImageChooserBlock",
                                (),
                                {
                                    "icon": "image",
                                    "template": "patterns/components/streamfields/image/image.html",
                                },
                            ),
                            6: (
                                "wagtail.documents.blocks.DocumentChooserBlock",
                                (),
                                {
                                    "icon": "doc-full-inverse",
                                    "template": "patterns/components/streamfields/document/document.html",
                                },
                            ),
                            7: (
                                "wagtail.embeds.blocks.EmbedBlock",
                                (),
                                {
                                    "icon": "code",
                                    "template": "patterns/components/streamfields/embed/embed.html",
                                },
                            ),
                            8: (
                                "climtech.utils.blocks.MarkDownBlock",
                                (),
                                {
                                    "template": "patterns/components/streamfields/code_block/code_block.html"
                                },
                            ),
                            9: (
                                "wagtail.blocks.ChoiceBlock",
                                [],
                                {
                                    "choices": [
                                        ("bash", "Bash/Shell"),
                                        ("css", "CSS"),
                                        ("django", "Django templating language"),
                                        ("html", "HTML"),
                                        ("javascript", "Javascript"),
                                        ("python", "Python"),
                                        ("scss", "SCSS"),
                                    ]
                                },
                            ),
                            10: ("wagtail.blocks.TextBlock", (), {}),
                            11: (
                                "wagtail.blocks.StructBlock",
                                [[("language", 9), ("code", 10)]],
                                {
                                    "template": "patterns/components/streamfields/code_block/code_block.html"
                                },
                            ),
                            12: (
                                "wagtail.blocks.PageChooserBlock",
                                (),
                                {"page_type": ["blog.BlogPage"], "required": False},
                            ),
                            13: ("wagtail.blocks.URLBlock", (), {"required": False}),
                            14: (
                                "wagtail.images.blocks.ImageChooserBlock",
                                (),
                                {"required": False},
                            ),
                            15: ("wagtail.blocks.TextBlock", (), {"required": False}),
                            16: (
                                "wagtail.blocks.TextBlock",
                                (),
                                {
                                    "label": "Subheading for external link",
                                    "required": False,
                                },
                            ),
                            17: (
                                "wagtail.blocks.StructBlock",
                                [
                                    [
                                        ("page", 12),
                                        ("url_chooser", 13),
                                        ("image_for_external_link", 14),
                                        ("heading_for_external_link", 15),
                                        ("subheading_for_ext_link", 16),
                                    ]
                                ],
                                {"group": "CTA options"},
                            ),
                            18: (
                                "wagtail.snippets.blocks.SnippetChooserBlock",
                                ("core.GetStartedSnippet",),
                                {
                                    "group": "CTA options",
                                    "icon": "table-list",
                                    "template": "patterns/components/streamfields/get_started_block/get_started_block.html",
                                },
                            ),
                            19: (
                                "wagtail.snippets.blocks.SnippetChooserBlock",
                                ("core.SignupFormSnippet",),
                                {
                                    "group": "CTA options",
                                    "icon": "envelope-open-text",
                                    "template": "patterns/components/streamfields/sign_up_form_block/sign_up_form_block.html",
                                },
                            ),
                            20: ("wagtail.blocks.CharBlock", (), {"max_length": 100}),
                            21: ("wagtail.images.blocks.ImageChooserBlock", (), {}),
                            22: (
                                "wagtail.blocks.BooleanBlock",
                                (),
                                {"default": False, "required": False},
                            ),
                            23: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {"max_length": 50, "required": False},
                            ),
                            24: (
                                "wagtail.blocks.ChoiceBlock",
                                [],
                                {
                                    "choices": [
                                        ("arrow-alt", "Arrow alt"),
                                        ("arrow-in-circle", "Arrow in circle"),
                                        ("arrow-in-square", "Arrow in square"),
                                        ("arrows", "Arrows"),
                                        ("blog", "Blog"),
                                        ("bread", "Bread"),
                                        ("briefcase", "Briefcase"),
                                        ("building", "Building"),
                                        ("calendar", "Calendar"),
                                        ("code-file", "Code File"),
                                        ("document", "Document"),
                                        ("envelope", "Envelope"),
                                        ("explanation", "Explanation"),
                                        ("eye", "Eye"),
                                        ("flame", "Flame"),
                                        ("friends", "Friends"),
                                        ("github", "Github"),
                                        ("handshake", "Handshake"),
                                        ("heart", "Heart"),
                                        ("history", "History"),
                                        ("id-card", "ID Card"),
                                        ("image", "Image"),
                                        ("knife-fork", "Knife Fork"),
                                        ("leaf", "Leaf"),
                                        ("location-pin", "Location Pin"),
                                        ("map", "Map"),
                                        ("magnifying-glass", "Magnifying Glass"),
                                        ("money", "Money"),
                                        ("moon", "Moon"),
                                        ("one-two-steps", "One Two Steps"),
                                        ("padlock", "Padlock"),
                                        ("paper-plane", "Paper Plane"),
                                        ("paper-stack", "Paper Stack"),
                                        ("pen-checkbox", "Pen Checkbox"),
                                        ("person-in-tie", "Person in Tie"),
                                        ("python", "Python"),
                                        (
                                            "question-mark-circle",
                                            "Question Mark Circle",
                                        ),
                                        ("quotes", "Quotes"),
                                        ("release-cycle", "Release Cycle"),
                                        ("roadmap", "Roadmap"),
                                        ("rocket", "Rocket"),
                                        ("rollback", "Rollback"),
                                        ("slack", "Slack"),
                                        ("speech-bubble", "Speech Bubble"),
                                        ("sun-cloud", "Sun Cloud"),
                                        ("table-tennis", "Table Tennis"),
                                        ("tree", "Tree"),
                                        ("wordpress", "Wordpress"),
                                        ("world", "World"),
                                    ],
                                    "required": False,
                                },
                            ),
                            25: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {
                                    "label": "CTA text",
                                    "max_length": 255,
                                    "required": False,
                                },
                            ),
                            26: (
                                "wagtail.blocks.PageChooserBlock",
                                (),
                                {"label": "CTA page", "required": False},
                            ),
                            27: (
                                "wagtail.blocks.URLBlock",
                                (),
                                {"label": "CTA URL", "required": False},
                            ),
                            28: (
                                "wagtail.blocks.StructBlock",
                                [[("text", 25), ("cta_page", 26), ("cta_url", 27)]],
                                {},
                            ),
                            29: (
                                "wagtail.blocks.StructBlock",
                                [
                                    [
                                        ("heading", 20),
                                        ("description", 15),
                                        ("image", 21),
                                        ("image_on_right", 22),
                                        ("meta_text", 23),
                                        ("meta_icon", 24),
                                        ("cta", 28),
                                    ]
                                ],
                                {},
                            ),
                            30: (
                                "wagtail.blocks.TextBlock",
                                (),
                                {
                                    "label": "Short description",
                                    "max_length": 100,
                                    "required": False,
                                },
                            ),
                            31: (
                                "wagtail.blocks.StructBlock",
                                [[("cta", 28), ("description", 30)]],
                                {"group": "CTA options"},
                            ),
                        },
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page", models.Model),
        ),
        migrations.CreateModel(
            name="BlogPageRelatedPage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="FeaturedPost",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
    ]

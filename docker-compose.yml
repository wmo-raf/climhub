x-climtech-variables: &climtech-variables
  WAIT_HOSTS: climtech_db:5432
  WAIT_TIMEOUT: 120
  ALLOWED_HOSTS: ${ALLOWED_HOSTS:-*}
  APP_NAME: ${APP_NAME:-ClimTech}
  GUNICORN_NUM_OF_WORKERS: ${CMS_NUM_OF_WORKERS:-4}
  CSRF_TRUSTED_ORIGINS: ${CSRF_TRUSTED_ORIGINS}
  DEBUG: ${DEBUG:-False}

  # database
  DB_USER: ${DB_USER:?}
  DB_NAME: ${DB_NAME:?}
  DB_PASSWORD: ${DB_PASSWORD:?}

  # basic auth
  BASIC_AUTH_ENABLED: ${BASIC_AUTH_ENABLED:-False}
  BASIC_AUTH_LOGIN: ${BASIC_AUTH_LOGIN:-climtech}
  BASIC_AUTH_PASSWORD: ${BASIC_AUTH_PASSWORD:-showmeclimtech}
  BASIC_AUTH_WHITELISTED_PATHS: ${BASIC_AUTH_WHITELISTED_PATHS:-}
  BASIC_AUTH_WHITELISTED_HTTP_HOST: ${BASIC_AUTH_WHITELISTED_HTTP_HOST:-}

  # cache
  CACHE_CONTROL_S_MAXAGE: ${CACHE_CONTROL_S_MAXAGE:-600}
  CACHE_CONTROL_STALE_WHILE_REVALIDATE: ${CACHE_CONTROL_STALE_WHILE_REVALIDATE:-30}

  # sitewide alert
  SITEWIDE_ALERT_MAXAGE: ${SITEWIDE_ALERT_MAXAGE:-300}
  SITEWIDE_ALERT_SMAXAGE: ${SITEWIDE_ALERT_SMAXAGE:-604800}

  # redis
  REDIS_URL: ${REDIS_URL:-}
  REDIS_TLS_URL: ${REDIS_TLS_URL:-}

  # smtp
  EMAIL_HOST: ${EMAIL_HOST:-}
  EMAIL_PORT: ${EMAIL_PORT:-}
  EMAIL_HOST_USER: ${EMAIL_HOST_USER:-}
  EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD:-}
  EMAIL_USE_TLS: ${EMAIL_USE_TLS:-False}
  EMAIL_USE_SSL: ${EMAIL_USE_SSL:-False}
  EMAIL_SUBJECT_PREFIX: ${EMAIL_SUBJECT_PREFIX:-Climweb}
  SERVER_EMAIL: ${SERVER_EMAIL:-} #default from email
  MODERATION_NOTIFY_SUPERUSERS: ${MODERATION_NOTIFY_SUPERUSERS:-}

  # HSTS header activation
  SECURE_HSTS_SECONDS: ${SECURE_HSTS_SECONDS:-}

  # Referrer-policy header settings
  SECURE_REFERRER_POLICY: ${SECURE_REFERRER_POLICY:-no-referrer-when-downgrade}

  # pattern library
  PATTERN_LIBRARY_ENABLED: ${PATTERN_LIBRARY_ENABLED:-false}

  # github integration
  GITHUB_ROADMAP_ACCESS_TOKEN: ${GITHUB_ROADMAP_ACCESS_TOKEN:-}

  # mailchimp
  MAILCHIMP_NEWSLETTER_ID: ${MAILCHIMP_NEWSLETTER_ID:-}
  MAILCHIMP_ACCOUNT_ID: ${MAILCHIMP_ACCOUNT_ID:-}

  # tracking
  FB_APP_ID: ${FB_APP_ID:-}
  GOOGLE_TAG_MANAGER_ID: ${GOOGLE_TAG_MANAGER_ID:-}

  SECRET_KEY: ${SECRET_KEY:-}
  DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE:-}


  # OpenTelemetry
  CLIMTECH_ENABLE_OTEL: ${CLIMTECH_ENABLE_OTEL:-False}
  OTEL_EXPORTER_OTLP_ENDPOINT: ${OTEL_EXPORTER_OTLP_ENDPOINT:-}
  OTEL_RESOURCE_ATTRIBUTES: ${OTEL_RESOURCE_ATTRIBUTES:-}
  OTEL_TRACES_SAMPLER: ${OTEL_TRACES_SAMPLER:-traceidratio}
  OTEL_TRACES_SAMPLER_ARG: ${OTEL_TRACES_SAMPLER_ARG:-0.1}
  OTEL_PER_MODULE_SAMPLER_OVERRIDES: ${OTEL_PER_MODULE_SAMPLER_OVERRIDES:-}

  #Logging
  CLIMTECH_LOG_LEVEL: ${CLIMTECH_LOG_LEVEL:-INFO}
  CLIMTECH_DEPLOYMENT_ENV: ${CLIMTECH_DEPLOYMENT_ENV:-production}

services:
  climtech_db:
    container_name: climtech_db
    image: ${DB_IMAGE:-postgis/postgis:15-master}
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ${DB_VOLUME:-./db_data}:/var/lib/postgresql/data/
    logging:
      driver: none
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U ${DB_USER}' ]
      interval: 5s
      timeout: 5s
      retries: 5

  climtech_redis:
    image: redis:alpine
    container_name: climtech_redis
    command: redis-server --requirepass ${REDIS_PASSWORD:?}
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]

  climtech_web:
    container_name: climtech_web
    build:
      context: .
      target: prod
      args:
        - UID=${UID}
        - GID=${GID}
        - DOCKER_COMPOSE_WAIT_PLATFORM_SUFFIX=${DOCKER_COMPOSE_WAIT_PLATFORM_SUFFIX:-}
    init: true
    # This command just starts the container and keeps it running.
    # To run a command within the container run docker-compose exec web <command>
    # A Makefile task exists that starts a development server in the container: make runserver
    # command: tail -f /dev/null
    environment:
      <<: *climtech-variables
      DATABASE_URL: postgis://${DB_USER}:${DB_PASSWORD}@climtech_db:5432/${DB_NAME}
      PRIMARY_HOST: localhost:8000
      REDIS_URL: redis://:${REDIS_PASSWORD:?}@climtech_redis:6379/0
    ports:
      - 8000:8000
    volumes:
      - ${STATIC_VOLUME}:/app/static
      - ${MEDIA_VOLUME}:/app/media
      - ${BACKUP_VOLUME}:/app/backup
      # - .:/app/ # use in development
    depends_on:
      climtech_db:
        condition: service_healthy
      climtech_redis:
        condition: service_healthy

  climtech_nginx:
    container_name: climtech_nginx
    image: nginx:1.20.2-alpine
    restart: always
    volumes:
      - ${STATIC_VOLUME}:/wagtail_static
      - ${MEDIA_VOLUME}:/wagtail_media
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - ${CLIMTECH_PORT:-80}:80
    depends_on:
      - climtech_web

networks:
  default:
    external: true
    name: ${NETWORK_NAME:-climtech}
